{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilh\\\\Desktop\\\\ai-emotions2.0\\\\client\\\\src\\\\components\\\\Home\\\\playerVideo.js\";\nimport useMusic from '../../hooks/useMusic';\nimport { playlistsContext, SelectedPlaylistContext } from '../../../context/playlistContext';\nimport { filePlayingContext } from '../../context/filePlaying';\nimport { PlayerVideoStyle } from './style';\nimport React, { useState, useEffect, useContext, useRef } from 'react';\n\nconst PlayerVideo = () => {\n  var _videoFile$value;\n\n  const [videoFile, setVideoFile] = useContext(filePlayingContext);\n  const [selectedPlaylist, setSelectedPlaylist] = useContext(SelectedPlaylistContext);\n  const [playlists, setPlaylists] = useContext(playlistsContext);\n  const {\n    PlayPause\n  } = usePlayer([videoFile, setVideoFile], [playlists, setPlaylists]);\n  const {\n    handlerSetPlaylistRandom\n  } = useMusic([videoFile, setVideoFile], [playlists, setPlaylists], [selectedPlaylist, setSelectedPlaylist]);\n\n  const handleProgress = state => {\n    if (!videoFile.seeking) {\n      const newVideoFile = { ...videoFile\n      };\n      newVideoFile.played = state.played;\n      setVideoFile(newVideoFile);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(PlayerVideoStyle, {\n    playing: videoFile.playing,\n    url: (_videoFile$value = videoFile.value) === null || _videoFile$value === void 0 ? void 0 : _videoFile$value.file,\n    onPause: () => {\n      PlayPause(false);\n    },\n    onPlay: () => {\n      PlayPause(true);\n    },\n    onEnded: handlerSetPlaylistRandom,\n    onProgress: handleProgress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Reac.memo(PlayerVideo);","map":{"version":3,"sources":["C:/Users/guilh/Desktop/ai-emotions2.0/client/src/components/Home/playerVideo.js"],"names":["useMusic","playlistsContext","SelectedPlaylistContext","filePlayingContext","PlayerVideoStyle","React","useState","useEffect","useContext","useRef","PlayerVideo","videoFile","setVideoFile","selectedPlaylist","setSelectedPlaylist","playlists","setPlaylists","PlayPause","usePlayer","handlerSetPlaylistRandom","handleProgress","state","seeking","newVideoFile","played","playing","value","file","Reac","memo"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,sBAArB;AACA,SAASC,gBAAT,EAA2BC,uBAA3B,QAA0D,kCAA1D;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,gBAAT,QAAiC,SAAjC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,MAAjD,QAA+D,OAA/D;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,UAAU,CAACL,kBAAD,CAA5C;AACA,QAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0CN,UAAU,CAACN,uBAAD,CAA1D;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4BR,UAAU,CAACP,gBAAD,CAA5C;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAgBC,SAAS,CAAC,CAACP,SAAD,EAAYC,YAAZ,CAAD,EAA4B,CAACG,SAAD,EAAYC,YAAZ,CAA5B,CAA/B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAA+BnB,QAAQ,CACzC,CAACW,SAAD,EAAYC,YAAZ,CADyC,EAEzC,CAACG,SAAD,EAAYC,YAAZ,CAFyC,EAGzC,CAACH,gBAAD,EAAmBC,mBAAnB,CAHyC,CAA7C;;AAMA,QAAMM,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAI,CAACV,SAAS,CAACW,OAAf,EAAwB;AACpB,YAAMC,YAAY,GAAG,EAAC,GAAGZ;AAAJ,OAArB;AACAY,MAAAA,YAAY,CAACC,MAAb,GAAsBH,KAAK,CAACG,MAA5B;AACAZ,MAAAA,YAAY,CAACW,YAAD,CAAZ;AACH;AACJ,GAND;;AAOA,sBACI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAEZ,SAAS,CAACc,OADvB;AAEI,IAAA,GAAG,sBAAEd,SAAS,CAACe,KAAZ,qDAAE,iBAAiBC,IAF1B;AAGI,IAAA,OAAO,EAAE,MAAK;AACVV,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH,KALL;AAMI,IAAA,MAAM,EAAE,MAAK;AACTA,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KARL;AASI,IAAA,OAAO,EAAEE,wBATb;AAUI,IAAA,UAAU,EAAEC,cAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAcH,CAhCD;;AAkCA,eAAeQ,IAAI,CAACC,IAAL,CAAUnB,WAAV,CAAf","sourcesContent":["import useMusic from '../../hooks/useMusic'\r\nimport { playlistsContext, SelectedPlaylistContext } from '../../../context/playlistContext'\r\nimport { filePlayingContext } from '../../context/filePlaying'\r\nimport { PlayerVideoStyle } from './style'\r\nimport React, { useState, useEffect, useContext, useRef } from 'react';\r\n\r\nconst PlayerVideo = () => {\r\n    const [videoFile, setVideoFile] = useContext(filePlayingContext)\r\n    const [selectedPlaylist, setSelectedPlaylist] = useContext(SelectedPlaylistContext)\r\n    const [playlists, setPlaylists] = useContext(playlistsContext)\r\n    const { PlayPause } = usePlayer([videoFile, setVideoFile], [playlists, setPlaylists]);\r\n    const { handlerSetPlaylistRandom } = useMusic(\r\n        [videoFile, setVideoFile],\r\n        [playlists, setPlaylists],\r\n        [selectedPlaylist, setSelectedPlaylist]\r\n    )\r\n\r\n    const handleProgress = (state) => {\r\n        if (!videoFile.seeking) {\r\n            const newVideoFile = {...videoFile} \r\n            newVideoFile.played = state.played\r\n            setVideoFile(newVideoFile)\r\n        }\r\n    }\r\n    return(\r\n        <PlayerVideoStyle \r\n            playing={videoFile.playing} \r\n            url={videoFile.value?.file} \r\n            onPause={()=> { \r\n                PlayPause(false)\r\n            }}\r\n            onPlay={()=> { \r\n                PlayPause(true)\r\n            }}\r\n            onEnded={handlerSetPlaylistRandom}\r\n            onProgress={handleProgress}\r\n        />\r\n    )    \r\n}\r\n\r\nexport default Reac.memo(PlayerVideo)"]},"metadata":{},"sourceType":"module"}