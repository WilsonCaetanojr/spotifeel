{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\guilh\\\\Desktop\\\\ai-emotions2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{playlistsContext,SelectedPlaylistContext}from'../../context/playlistContext';import{filePlayingContext}from'../../context/filePlaying';import React,{useState,useEffect,useContext}from'react';import{getLastMusicByPlaylist,modifyPlaylistMusics}from'../../services/PlaylistService';import{Text,Button,Dflex,Input}from'../../stylesGlobaly/globalComponents';import useMusic from'../../hooks/useMusic';var Emotions=function Emotions(props){var _useContext=useContext(SelectedPlaylistContext),_useContext2=_slicedToArray(_useContext,2),selectedPlaylist=_useContext2[0],setSelectedPlaylist=_useContext2[1];var _useContext3=useContext(playlistsContext),_useContext4=_slicedToArray(_useContext3,2),playlists=_useContext4[0],setPlaylists=_useContext4[1];var _useContext5=useContext(filePlayingContext),_useContext6=_slicedToArray(_useContext5,2),videoFile=_useContext6[0],setVideoFile=_useContext6[1];var _useMusic=useMusic([videoFile,setVideoFile],[playlists,setPlaylists],[selectedPlaylist,setSelectedPlaylist]),handlerSetPlaylistRandom=_useMusic.handlerSetPlaylistRandom;useEffect(function(){console.log(playlists);setSelectedPlaylist(playlists);},[]);return/*#__PURE__*/React.createElement(\"div\",{style:{width:\"100%\"}},/*#__PURE__*/React.createElement(Text,{my:\"20px\"},\"Playlist Selecionada: \",selectedPlaylist.title),/*#__PURE__*/React.createElement(Button,{my:\"20px\",onClick:handlerSetPlaylistRandom},\"Mudar Playlist\"));};export default Emotions;","map":{"version":3,"sources":["C:/Users/guilh/Desktop/ai-emotions2.0/client/src/components/Home/emotions.js"],"names":["playlistsContext","SelectedPlaylistContext","filePlayingContext","React","useState","useEffect","useContext","getLastMusicByPlaylist","modifyPlaylistMusics","Text","Button","Dflex","Input","useMusic","Emotions","props","selectedPlaylist","setSelectedPlaylist","playlists","setPlaylists","videoFile","setVideoFile","handlerSetPlaylistRandom","console","log","width","title"],"mappings":"6KAAA,OAASA,gBAAT,CAA2BC,uBAA3B,KAA0D,+BAA1D,CACA,OAASC,kBAAT,KAAmC,2BAAnC,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,OAASC,sBAAT,CAAiCC,oBAAjC,KAA6D,gCAA7D,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,KAAvB,CAA8BC,KAA9B,KAA2C,sCAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAS,iBAC0BT,UAAU,CAACL,uBAAD,CADpC,4CACfe,gBADe,iBACGC,mBADH,kCAEYX,UAAU,CAACN,gBAAD,CAFtB,6CAEfkB,SAFe,iBAEJC,YAFI,kCAGYb,UAAU,CAACJ,kBAAD,CAHtB,6CAGfkB,SAHe,iBAGJC,YAHI,+BAIeR,QAAQ,CACzC,CAACO,SAAD,CAAYC,YAAZ,CADyC,CAEzC,CAACH,SAAD,CAAYC,YAAZ,CAFyC,CAGzC,CAACH,gBAAD,CAAmBC,mBAAnB,CAHyC,CAJvB,CAIdK,wBAJc,WAIdA,wBAJc,CAUtBjB,SAAS,CAAC,UAAI,CACVkB,OAAO,CAACC,GAAR,CAAYN,SAAZ,EACAD,mBAAmB,CAACC,SAAD,CAAnB,CACH,CAHQ,CAGP,EAHO,CAAT,CAKA,mBACI,2BAAK,KAAK,CAAE,CAAEO,KAAK,CAAE,MAAT,CAAZ,eACI,oBAAC,IAAD,EAAM,EAAE,CAAC,MAAT,2BAAuCT,gBAAgB,CAACU,KAAxD,CADJ,cAEI,oBAAC,MAAD,EAAQ,EAAE,CAAC,MAAX,CAAkB,OAAO,CAAEJ,wBAA3B,mBAFJ,CADJ,CAMH,CArBD,CAuBA,cAAeR,CAAAA,QAAf","sourcesContent":["import { playlistsContext, SelectedPlaylistContext } from '../../context/playlistContext'\r\nimport { filePlayingContext } from '../../context/filePlaying'\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { getLastMusicByPlaylist, modifyPlaylistMusics } from '../../services/PlaylistService'\r\nimport { Text, Button, Dflex, Input } from '../../stylesGlobaly/globalComponents'\r\nimport useMusic from '../../hooks/useMusic'\r\n\r\nconst Emotions = (props)=>{\r\n    const [selectedPlaylist, setSelectedPlaylist] = useContext(SelectedPlaylistContext)\r\n    const [playlists, setPlaylists] = useContext(playlistsContext)\r\n    const [videoFile, setVideoFile] = useContext(filePlayingContext)\r\n    const { handlerSetPlaylistRandom } = useMusic(\r\n        [videoFile, setVideoFile],\r\n        [playlists, setPlaylists],\r\n        [selectedPlaylist, setSelectedPlaylist]\r\n    )\r\n\r\n    useEffect(()=>{\r\n        console.log(playlists)\r\n        setSelectedPlaylist(playlists)\r\n    },[])\r\n\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n            <Text my=\"20px\">Playlist Selecionada: {selectedPlaylist.title}</Text>\r\n            <Button my=\"20px\" onClick={handlerSetPlaylistRandom}>Mudar Playlist</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Emotions;"]},"metadata":{},"sourceType":"module"}