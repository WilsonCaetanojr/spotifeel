{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilh\\\\Desktop\\\\ai-emotions2.0\\\\client\\\\src\\\\components\\\\Home\\\\playlist\\\\index.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { PlaylistContainer, CardPlaylist, CardMusic, ContainerList, GridContainPlaylist, GridItemPlaylist, IconButtonPlay, MenuIconChangeMusic } from '../style';\nimport { Text, Button, Dflex } from '../../../stylesGlobaly/globalComponents';\nimport { getPlaylistByIdUser, modifyPlaylistMusics } from \"../../../services/PlaylistService\";\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport { playlistsContext, SelectedPlaylistContext } from '../../../context/playlistContext';\nimport Lottie from 'react-lottie';\nimport loadingSvg from '../../../stylesGlobaly/loading.json';\nimport ModalAdd from \"./Modal\";\nimport { openAddContext } from '../../../context/modalAddMusicContext';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport useMusic from '../../../hooks/useMusic';\nimport usePlaylist from '../../../hooks/usePlaylist';\nimport { filePlayingContext } from '../../../context/filePlaying';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst Playlist = props => {\n  const [selectedPlaylist, setSelectedPlaylist] = useContext(SelectedPlaylistContext);\n  const [playlists, setPlaylists] = useContext(playlistsContext);\n  const [videoFile, setVideoFile] = useContext(filePlayingContext);\n  const [open, setOpen] = useState(false);\n  const [clickedPlaylistId, setClickedPlaylistId] = useState('');\n  const {\n    handlerSetMusic\n  } = useMusic([videoFile, setVideoFile], [playlists, setPlaylists], [selectedPlaylist, setSelectedPlaylist]);\n  const {\n    playlistsUser,\n    onSortEnd\n  } = usePlaylist([playlists, setPlaylists]);\n\n  async function handlerAddMusics(idPlaylist) {\n    setClickedPlaylistId(idPlaylist);\n    setOpen(true);\n  }\n\n  const SortableItem = SortableElement(({\n    value\n  }) => {\n    return /*#__PURE__*/React.createElement(CardMusic, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(MenuIconChangeMusic, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      as: \"center\",\n      size: \"14px\",\n      mb: \"0px\",\n      ml: \"12px\",\n      wrap: \"inherit\",\n      tlines: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, value === null || value === void 0 ? void 0 : value.title), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => handlerSetMusic(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PlayArrowIcon, {\n      style: {\n        color: \"#1db954\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    })));\n  });\n  const SortableList = SortableContainer(({\n    items\n  }) => {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, items.map((value, index) => {\n      var _value$value;\n\n      return /*#__PURE__*/React.createElement(SortableItem, {\n        key: `item-${(_value$value = value.value) === null || _value$value === void 0 ? void 0 : _value$value._id}`,\n        index: index,\n        value: value.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      });\n    }));\n  });\n  useEffect(() => {\n    playlistsUser(props.user._id);\n  }, []);\n  return /*#__PURE__*/React.createElement(PlaylistContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, playlists.length == 0 && /*#__PURE__*/React.createElement(Lottie, {\n    options: {\n      loop: true,\n      autoplay: true,\n      animationData: loadingSvg,\n      rendererSettings: {\n        preserveAspectRatio: \"xMidYMid slice\"\n      }\n    },\n    height: 40,\n    width: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 42\n    }\n  }), playlists.map((element, i) => {\n    return /*#__PURE__*/React.createElement(GridItemPlaylist, {\n      key: element === null || element === void 0 ? void 0 : element._id,\n      item: true,\n      xs: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardPlaylist, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      size: \"16px\",\n      mb: \"0px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, element === null || element === void 0 ? void 0 : element.title), /*#__PURE__*/React.createElement(ContainerList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SortableList, {\n      items: element === null || element === void 0 ? void 0 : element.music,\n      onSortEnd: e => onSortEnd(e, element === null || element === void 0 ? void 0 : element._id),\n      pressDelay: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      w: \"60%\",\n      my: \"1rem\",\n      onClick: () => handlerAddMusics(element === null || element === void 0 ? void 0 : element._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, \"Add Musicas\"))));\n  }), /*#__PURE__*/React.createElement(openAddContext.Provider, {\n    value: [open, setOpen],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalAdd, {\n    playlist: clickedPlaylistId,\n    user: props.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Playlist;","map":{"version":3,"sources":["C:/Users/guilh/Desktop/ai-emotions2.0/client/src/components/Home/playlist/index.js"],"names":["React","useState","useEffect","useContext","PlaylistContainer","CardPlaylist","CardMusic","ContainerList","GridContainPlaylist","GridItemPlaylist","IconButtonPlay","MenuIconChangeMusic","Text","Button","Dflex","getPlaylistByIdUser","modifyPlaylistMusics","SortableContainer","SortableElement","arrayMove","playlistsContext","SelectedPlaylistContext","Lottie","loadingSvg","ModalAdd","openAddContext","PlayArrowIcon","useMusic","usePlaylist","filePlayingContext","IconButton","Playlist","props","selectedPlaylist","setSelectedPlaylist","playlists","setPlaylists","videoFile","setVideoFile","open","setOpen","clickedPlaylistId","setClickedPlaylistId","handlerSetMusic","playlistsUser","onSortEnd","handlerAddMusics","idPlaylist","SortableItem","value","title","color","SortableList","items","map","index","_id","user","length","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","element","i","music","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,iBAAT,EAA4BC,YAA5B,EAA0CC,SAA1C,EAAqDC,aAArD,EAAoEC,mBAApE,EAAyFC,gBAAzF,EAA2GC,cAA3G,EAA2HC,mBAA3H,QAAsJ,UAAtJ;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,yCAApC;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,mCAA1D;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,oBAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,gBAAT,EAA2BC,uBAA3B,QAA0D,kCAA1D;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,SAASC,cAAT,QAA+B,uCAA/B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0C/B,UAAU,CAACkB,uBAAD,CAA1D;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BjC,UAAU,CAACiB,gBAAD,CAA5C;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BnC,UAAU,CAAC0B,kBAAD,CAA5C;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBvC,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACwC,iBAAD,EAAoBC,oBAApB,IAA4CzC,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM;AAAE0C,IAAAA;AAAF,MAAsBhB,QAAQ,CAChC,CAACU,SAAD,EAAYC,YAAZ,CADgC,EAEhC,CAACH,SAAD,EAAYC,YAAZ,CAFgC,EAGhC,CAACH,gBAAD,EAAmBC,mBAAnB,CAHgC,CAApC;AAKA,QAAM;AAAEU,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA+BjB,WAAW,CAAC,CAACO,SAAD,EAAYC,YAAZ,CAAD,CAAhD;;AAGA,iBAAeU,gBAAf,CAAgCC,UAAhC,EAA4C;AACxCL,IAAAA,oBAAoB,CAACK,UAAD,CAApB;AACAP,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH;;AAED,QAAMQ,YAAY,GAAG9B,eAAe,CAAC,CAAC;AAAE+B,IAAAA;AAAF,GAAD,KAAe;AAChD,wBAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,eAEH,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAkB,MAAA,IAAI,EAAC,MAAvB;AAA8B,MAAA,EAAE,EAAC,KAAjC;AAAuC,MAAA,EAAE,EAAC,MAA1C;AAAiD,MAAA,IAAI,EAAC,SAAtD;AAAgE,MAAA,MAAM,EAAE,IAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+EA,KAA/E,aAA+EA,KAA/E,uBAA+EA,KAAK,CAAEC,KAAtF,CAFG,eAGH,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,MAAIP,eAAe,CAACM,KAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHG,CAAP;AAOH,GARmC,CAApC;AAUA,QAAMC,YAAY,GAAGnC,iBAAiB,CAAC,CAAC;AAAEoC,IAAAA;AAAF,GAAD,KAAe;AAClD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KAAK,CAACC,GAAN,CAAU,CAACL,KAAD,EAAQM,KAAR;AAAA;;AAAA,0BACP,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAG,QAAD,gBAAQN,KAAK,CAACA,KAAd,iDAAQ,aAAaO,GAAI,EAA5C;AAA+C,QAAA,KAAK,EAAED,KAAtD;AAA6D,QAAA,KAAK,EAAEN,KAAK,CAACA,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO;AAAA,KAAV,CADL,CADJ;AAOH,GARqC,CAAtC;AAUA/C,EAAAA,SAAS,CAAC,MAAM;AACZ0C,IAAAA,aAAa,CAACZ,KAAK,CAACyB,IAAN,CAAWD,GAAZ,CAAb;AACH,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQrB,SAAS,CAACuB,MAAV,IAAoB,CAApB,iBAAyB,oBAAC,MAAD;AACrB,IAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE,IADD;AAELC,MAAAA,QAAQ,EAAE,IAFL;AAGLC,MAAAA,aAAa,EAAEtC,UAHV;AAILuC,MAAAA,gBAAgB,EAAE;AACdC,QAAAA,mBAAmB,EAAE;AADP;AAJb,KADY;AASrB,IAAA,MAAM,EAAE,EATa;AAUrB,IAAA,KAAK,EAAE,EAVc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFjC,EAgBQ5B,SAAS,CAACmB,GAAV,CAAc,CAACU,OAAD,EAAUC,CAAV,KAAgB;AAC1B,wBACI,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAED,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAER,GAAhC;AAAqC,MAAA,IAAI,MAAzC;AAA0C,MAAA,EAAE,EAAE,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,EAAE,EAAC,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BQ,OAA5B,aAA4BA,OAA5B,uBAA4BA,OAAO,CAAEd,KAArC,CADJ,eAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAEc,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEE,KAA9B;AAAqC,MAAA,SAAS,EAAGC,CAAD,IAAOtB,SAAS,CAACsB,CAAD,EAAIH,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAER,GAAb,CAAhE;AAAmF,MAAA,UAAU,EAAE,GAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,CAAC,EAAC,KAAV;AAAgB,MAAA,EAAE,EAAC,MAAnB;AAA0B,MAAA,OAAO,EAAE,MAAMV,gBAAgB,CAACkB,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAER,GAAV,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CALJ,CADJ,CADJ;AAaH,GAdD,CAhBR,eAgCI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE,CAACjB,IAAD,EAAOC,OAAP,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEC,iBAApB;AAAuC,IAAA,IAAI,EAAET,KAAK,CAACyB,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAhCJ,CADJ;AAsCH,CAlFD;;AAoFA,eAAe1B,QAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { PlaylistContainer, CardPlaylist, CardMusic, ContainerList, GridContainPlaylist, GridItemPlaylist, IconButtonPlay, MenuIconChangeMusic } from '../style'\r\nimport { Text, Button, Dflex } from '../../../stylesGlobaly/globalComponents'\r\nimport { getPlaylistByIdUser, modifyPlaylistMusics } from \"../../../services/PlaylistService\"\r\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move'\r\nimport { playlistsContext, SelectedPlaylistContext } from '../../../context/playlistContext'\r\nimport Lottie from 'react-lottie';\r\nimport loadingSvg from '../../../stylesGlobaly/loading.json';\r\nimport ModalAdd from \"./Modal\"\r\nimport { openAddContext } from '../../../context/modalAddMusicContext';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport useMusic from '../../../hooks/useMusic'\r\nimport usePlaylist from '../../../hooks/usePlaylist'\r\nimport { filePlayingContext } from '../../../context/filePlaying'\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst Playlist = (props) => {\r\n    const [selectedPlaylist, setSelectedPlaylist] = useContext(SelectedPlaylistContext)\r\n    const [playlists, setPlaylists] = useContext(playlistsContext)\r\n    const [videoFile, setVideoFile] = useContext(filePlayingContext)\r\n    const [open, setOpen] = useState(false)\r\n    const [clickedPlaylistId, setClickedPlaylistId] = useState('')\r\n    const { handlerSetMusic } = useMusic(\r\n        [videoFile, setVideoFile],\r\n        [playlists, setPlaylists],\r\n        [selectedPlaylist, setSelectedPlaylist]\r\n    )\r\n    const { playlistsUser, onSortEnd } = usePlaylist([playlists, setPlaylists])\r\n\r\n\r\n    async function handlerAddMusics(idPlaylist) {\r\n        setClickedPlaylistId(idPlaylist)\r\n        setOpen(true)\r\n    }\r\n\r\n    const SortableItem = SortableElement(({ value }) => {\r\n        return <CardMusic>\r\n            <MenuIconChangeMusic />\r\n            <Text as=\"center\" size=\"14px\" mb=\"0px\" ml=\"12px\" wrap=\"inherit\" tlines={true}>{value?.title}</Text>\r\n            <IconButton onClick={()=>handlerSetMusic(value)}>\r\n                <PlayArrowIcon style={{ color: \"#1db954\" }}></PlayArrowIcon>\r\n            </IconButton>\r\n        </CardMusic>\r\n    });\r\n\r\n    const SortableList = SortableContainer(({ items }) => {\r\n        return (\r\n            <ul>\r\n                {items.map((value, index) => (\r\n                    <SortableItem key={`item-${value.value?._id}`} index={index} value={value.value} />\r\n                ))}\r\n            </ul>\r\n        );\r\n    });\r\n\r\n    useEffect(() => {\r\n        playlistsUser(props.user._id)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <PlaylistContainer>\r\n            {\r\n                playlists.length == 0 && <Lottie\r\n                    options={{\r\n                        loop: true,\r\n                        autoplay: true,\r\n                        animationData: loadingSvg,\r\n                        rendererSettings: {\r\n                            preserveAspectRatio: \"xMidYMid slice\"\r\n                        }\r\n                    }}\r\n                    height={40}\r\n                    width={40}\r\n                />\r\n            }\r\n            {\r\n                playlists.map((element, i) => {\r\n                    return (\r\n                        <GridItemPlaylist key={element?._id} item xs={3}>\r\n                            <CardPlaylist>\r\n                                <Text size=\"16px\" mb=\"0px\">{element?.title}</Text>\r\n                                <ContainerList>\r\n                                    <SortableList items={element?.music} onSortEnd={(e) => onSortEnd(e, element?._id)} pressDelay={200} />\r\n                                </ContainerList>\r\n                                <div>\r\n                                    <Button w=\"60%\" my=\"1rem\" onClick={() => handlerAddMusics(element?._id)}>Add Musicas</Button>\r\n                                </div>\r\n                            </CardPlaylist>\r\n                        </GridItemPlaylist>\r\n                    )\r\n                })\r\n            }\r\n            <openAddContext.Provider value={[open, setOpen]}>\r\n                <ModalAdd playlist={clickedPlaylistId} user={props.user} />\r\n            </openAddContext.Provider>\r\n        </PlaylistContainer>\r\n    );\r\n}\r\n\r\nexport default Playlist;"]},"metadata":{},"sourceType":"module"}