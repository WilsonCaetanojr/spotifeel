{"ast":null,"code":"import { modifyPlaylistMusics, getPlaylistByIdUser, getTitleVideo, insertIntoPlaylistMusicOtherSite, insertIntoPlaylistMusics } from '../services/PlaylistService';\nimport arrayMove from 'array-move';\nexport default function usePlaylist([playlists, setPlaylists]) {\n  async function handlerAddMusics(idPlaylist) {\n    setClickedPlaylistId(idPlaylist);\n    setOpen(true);\n  }\n\n  async function playlistsUser() {\n    const infoPlaylists = await getPlaylistByIdUser(props.user._id);\n\n    if (Array.isArray(infoPlaylists) && infoPlaylists.length > 0) {\n      setPlaylists(infoPlaylists);\n    }\n  }\n\n  function onSortEnd({\n    oldIndex,\n    newIndex\n  }, playlistId) {\n    const [playlistWhoChanged] = playlists.filter(playlist => playlist._id == playlistId);\n    const newMusics = arrayMove(playlistWhoChanged.music, oldIndex, newIndex);\n    const newPlaylists = [...playlists];\n    newPlaylists[playlists.indexOf(playlistWhoChanged)].music = newMusics;\n    modifyPlaylistMusics(playlistId, newMusics);\n    setPlaylists(newPlaylists);\n  }\n\n  const addingMusic = async files => {\n    var formData = new FormData();\n    var arrFiles = [...files];\n    arrFiles.forEach(file => {\n      console.log(file);\n      formData.append('file', file);\n    });\n    await insertIntoPlaylistMusics(props.playlist, formData);\n    const infoPlaylists = await getPlaylistByIdUser(props.user._id);\n    setPlaylists(infoPlaylists);\n    setOpenModalAdd(false);\n  };\n\n  const addingMusicLink = async link => {\n    if (!link) return;\n    const infoMusica = await getTitleVideo(link);\n    await insertIntoPlaylistMusicOtherSite(props.playlist, {\n      url: link,\n      title: infoMusica.items[0].snippet.title\n    });\n    const infoPlaylists = await getPlaylistByIdUser(props.user._id);\n    setPlaylists(infoPlaylists);\n    setOpenModalAdd(false);\n  };\n\n  return {\n    handlerAddMusics,\n    playlistsUser,\n    onSortEnd,\n    addingMusic,\n    handleSave\n  };\n}","map":{"version":3,"sources":["C:/Users/guilh/Desktop/ai-emotions2.0/client/src/hooks/usePlaylist.js"],"names":["modifyPlaylistMusics","getPlaylistByIdUser","getTitleVideo","insertIntoPlaylistMusicOtherSite","insertIntoPlaylistMusics","arrayMove","usePlaylist","playlists","setPlaylists","handlerAddMusics","idPlaylist","setClickedPlaylistId","setOpen","playlistsUser","infoPlaylists","props","user","_id","Array","isArray","length","onSortEnd","oldIndex","newIndex","playlistId","playlistWhoChanged","filter","playlist","newMusics","music","newPlaylists","indexOf","addingMusic","files","formData","FormData","arrFiles","forEach","file","console","log","append","setOpenModalAdd","addingMusicLink","link","infoMusica","url","title","items","snippet","handleSave"],"mappings":"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","sourcesContent":["\r\nimport { modifyPlaylistMusics, getPlaylistByIdUser, getTitleVideo, insertIntoPlaylistMusicOtherSite, insertIntoPlaylistMusics } from '../services/PlaylistService'\r\nimport arrayMove from 'array-move'\r\n\r\nexport default function usePlaylist(\r\n    [playlists, setPlaylists],\r\n) {\r\n    async function handlerAddMusics(idPlaylist) {\r\n        setClickedPlaylistId(idPlaylist)\r\n        setOpen(true)\r\n    }\r\n\r\n    async function playlistsUser() {\r\n        const infoPlaylists = await getPlaylistByIdUser(props.user._id)\r\n        if (Array.isArray(infoPlaylists) && infoPlaylists.length > 0) {\r\n            setPlaylists(infoPlaylists)\r\n        }\r\n    }\r\n\r\n    function onSortEnd({ oldIndex, newIndex }, playlistId) {\r\n        const [playlistWhoChanged] = playlists.filter((playlist) => playlist._id == playlistId)\r\n        const newMusics = arrayMove(playlistWhoChanged.music, oldIndex, newIndex)\r\n        const newPlaylists = [...playlists]\r\n        newPlaylists[playlists.indexOf(playlistWhoChanged)].music = newMusics\r\n\r\n        modifyPlaylistMusics(playlistId, newMusics)\r\n        setPlaylists(newPlaylists)\r\n    }\r\n\r\n    const addingMusic = async (files) => {\r\n        var formData = new FormData()\r\n        var arrFiles = [...files]\r\n        arrFiles.forEach((file) => {\r\n            console.log(file)\r\n            formData.append('file', file)\r\n        })\r\n        await insertIntoPlaylistMusics(props.playlist, formData)\r\n        const infoPlaylists = await getPlaylistByIdUser(props.user._id)\r\n\r\n        setPlaylists(infoPlaylists)\r\n        setOpenModalAdd(false)\r\n    }\r\n\r\n    const addingMusicLink = async (link) => {\r\n        if (!link) return\r\n        const infoMusica = await getTitleVideo(link)\r\n        await insertIntoPlaylistMusicOtherSite(props.playlist, {\r\n            url: link,\r\n            title: infoMusica.items[0].snippet.title\r\n        })\r\n        const infoPlaylists = await getPlaylistByIdUser(props.user._id)\r\n\r\n        setPlaylists(infoPlaylists)\r\n        setOpenModalAdd(false)\r\n    }\r\n\r\n    return {\r\n        handlerAddMusics,\r\n        playlistsUser,\r\n        onSortEnd,\r\n        addingMusic,\r\n        handleSave\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}