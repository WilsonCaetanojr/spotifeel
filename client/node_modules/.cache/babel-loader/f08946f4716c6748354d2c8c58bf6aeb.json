{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\guilh\\\\Desktop\\\\ai-emotions2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\guilh\\\\Desktop\\\\ai-emotions2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\guilh\\\\Desktop\\\\ai-emotions2.0\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useContext}from'react';import{PlaylistContainer,CardPlaylist,CardMusic,ContainerList,GridContainPlaylist,GridItemPlaylist,IconButtonPlay,MenuIconChangeMusic}from'../style';import{Text,Button,Dflex}from'../../../stylesGlobaly/globalComponents';import{getPlaylistByIdUser,modifyPlaylistMusics}from\"../../../services/PlaylistService\";import{SortableContainer,SortableElement}from'react-sortable-hoc';import arrayMove from'array-move';import{playlistsContext,SelectedPlaylistContext}from'../../../context/playlistContext';import Lottie from'react-lottie';import loadingSvg from'../../../stylesGlobaly/loading.json';import ModalAdd from\"./Modal\";import{openAddContext}from'../../../context/modalAddMusicContext';import PlayArrowIcon from'@material-ui/icons/PlayArrow';import useMusic from'../../../hooks/useMusic';import usePlaylist from'../../../hooks/usePlaylist';import{filePlayingContext}from'../../../context/filePlaying';import IconButton from'@material-ui/core/IconButton';var Playlist=function Playlist(props){var _useContext=useContext(SelectedPlaylistContext),_useContext2=_slicedToArray(_useContext,2),selectedPlaylist=_useContext2[0],setSelectedPlaylist=_useContext2[1];var _useContext3=useContext(playlistsContext),_useContext4=_slicedToArray(_useContext3,2),playlists=_useContext4[0],setPlaylists=_useContext4[1];var _useContext5=useContext(filePlayingContext),_useContext6=_slicedToArray(_useContext5,2),videoFile=_useContext6[0],setVideoFile=_useContext6[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),clickedPlaylistId=_useState4[0],setClickedPlaylistId=_useState4[1];var _useMusic=useMusic([videoFile,setVideoFile],[playlists,setPlaylists],[selectedPlaylist,setSelectedPlaylist]),handlerSetMusic=_useMusic.handlerSetMusic,changeOrderMusic=_useMusic.changeOrderMusic;var _usePlaylist=usePlaylist([playlists,setPlaylists]),playlistsUser=_usePlaylist.playlistsUser;function handlerAddMusics(_x){return _handlerAddMusics.apply(this,arguments);}function _handlerAddMusics(){_handlerAddMusics=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(idPlaylist){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setClickedPlaylistId(idPlaylist);setOpen(true);case 2:case\"end\":return _context.stop();}}},_callee);}));return _handlerAddMusics.apply(this,arguments);}function _onSortEnd2(_x2,_x3){return _onSortEnd.apply(this,arguments);}function _onSortEnd(){_onSortEnd=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref,playlistId){var oldIndex,newIndex,_playlists$filter,_playlists$filter2,playlistWhoChanged;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:oldIndex=_ref.oldIndex,newIndex=_ref.newIndex;_playlists$filter=playlists.filter(function(playlist){return playlist._id==playlistId;}),_playlists$filter2=_slicedToArray(_playlists$filter,1),playlistWhoChanged=_playlists$filter2[0];changeOrderMusic(playlistWhoChanged,oldIndex,newIndex);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _onSortEnd.apply(this,arguments);}var SortableItem=SortableElement(function(_ref2){var _videoFile$value,_value$value,_value$value2;var value=_ref2.value;return/*#__PURE__*/React.createElement(CardMusic,null,/*#__PURE__*/React.createElement(MenuIconChangeMusic,{low_opacity:videoFile.playing}),/*#__PURE__*/React.createElement(Text,{low_opacity:((_videoFile$value=videoFile.value)===null||_videoFile$value===void 0?void 0:_videoFile$value._id)!=((_value$value=value.value)===null||_value$value===void 0?void 0:_value$value._id)&&videoFile.playing,as:\"center\",size:\"14px\",mb:\"0px\",ml:\"12px\",wrap:\"inherit\",tlines:true},(_value$value2=value.value)===null||_value$value2===void 0?void 0:_value$value2.title),/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){return handlerSetMusic(value.value);}},/*#__PURE__*/React.createElement(PlayArrowIcon,{style:{color:\"#1db954\"}})));});var SortableList=SortableContainer(function(_ref3){var items=_ref3.items;return/*#__PURE__*/React.createElement(\"ul\",null,items.map(function(value,index){var _value$value3;return/*#__PURE__*/React.createElement(SortableItem,{disabled:videoFile.playing,key:\"item-\".concat((_value$value3=value.value)===null||_value$value3===void 0?void 0:_value$value3._id),index:index,value:value});}));});useEffect(function(){playlistsUser(props.user._id);},[]);return/*#__PURE__*/React.createElement(PlaylistContainer,null,playlists.length==0&&/*#__PURE__*/React.createElement(Lottie,{options:{loop:true,autoplay:true,animationData:loadingSvg,rendererSettings:{preserveAspectRatio:\"xMidYMid slice\"}},height:40,width:40}),playlists.map(function(element,i){return/*#__PURE__*/React.createElement(GridItemPlaylist,{key:element===null||element===void 0?void 0:element._id,item:true,xs:3},/*#__PURE__*/React.createElement(CardPlaylist,null,/*#__PURE__*/React.createElement(Text,{size:\"16px\",mb:\"0px\"},element===null||element===void 0?void 0:element.title),/*#__PURE__*/React.createElement(ContainerList,null,/*#__PURE__*/React.createElement(SortableList,{items:element===null||element===void 0?void 0:element.music,onSortEnd:function onSortEnd(e){return _onSortEnd2(e,element===null||element===void 0?void 0:element._id);},pressDelay:200})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{w:\"60%\",my:\"1rem\",onClick:function onClick(){return handlerAddMusics(element===null||element===void 0?void 0:element._id);}},\"Add Musicas\"))));}),/*#__PURE__*/React.createElement(openAddContext.Provider,{value:[open,setOpen]},/*#__PURE__*/React.createElement(ModalAdd,{playlist:clickedPlaylistId,user:props.user})));};export default Playlist;","map":{"version":3,"sources":["C:/Users/guilh/Desktop/ai-emotions2.0/client/src/components/Home/playlist/index.js"],"names":["React","useState","useEffect","useContext","PlaylistContainer","CardPlaylist","CardMusic","ContainerList","GridContainPlaylist","GridItemPlaylist","IconButtonPlay","MenuIconChangeMusic","Text","Button","Dflex","getPlaylistByIdUser","modifyPlaylistMusics","SortableContainer","SortableElement","arrayMove","playlistsContext","SelectedPlaylistContext","Lottie","loadingSvg","ModalAdd","openAddContext","PlayArrowIcon","useMusic","usePlaylist","filePlayingContext","IconButton","Playlist","props","selectedPlaylist","setSelectedPlaylist","playlists","setPlaylists","videoFile","setVideoFile","open","setOpen","clickedPlaylistId","setClickedPlaylistId","handlerSetMusic","changeOrderMusic","playlistsUser","handlerAddMusics","idPlaylist","onSortEnd","playlistId","oldIndex","newIndex","filter","playlist","_id","playlistWhoChanged","SortableItem","value","playing","title","color","SortableList","items","map","index","user","length","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","element","i","music","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { PlaylistContainer, CardPlaylist, CardMusic, ContainerList, GridContainPlaylist, GridItemPlaylist, IconButtonPlay, MenuIconChangeMusic } from '../style'\r\nimport { Text, Button, Dflex } from '../../../stylesGlobaly/globalComponents'\r\nimport { getPlaylistByIdUser, modifyPlaylistMusics } from \"../../../services/PlaylistService\"\r\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\r\nimport arrayMove from 'array-move'\r\nimport { playlistsContext, SelectedPlaylistContext } from '../../../context/playlistContext'\r\nimport Lottie from 'react-lottie';\r\nimport loadingSvg from '../../../stylesGlobaly/loading.json';\r\nimport ModalAdd from \"./Modal\"\r\nimport { openAddContext } from '../../../context/modalAddMusicContext';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport useMusic from '../../../hooks/useMusic'\r\nimport usePlaylist from '../../../hooks/usePlaylist'\r\nimport { filePlayingContext } from '../../../context/filePlaying'\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst Playlist = (props) => {\r\n    const [selectedPlaylist, setSelectedPlaylist] = useContext(SelectedPlaylistContext)\r\n    const [playlists, setPlaylists] = useContext(playlistsContext)\r\n    const [videoFile, setVideoFile] = useContext(filePlayingContext)\r\n    const [open, setOpen] = useState(false)\r\n    const [clickedPlaylistId, setClickedPlaylistId] = useState('')\r\n    const { handlerSetMusic, changeOrderMusic } = useMusic(\r\n        [videoFile, setVideoFile],\r\n        [playlists, setPlaylists],\r\n        [selectedPlaylist, setSelectedPlaylist]\r\n    )\r\n    const { playlistsUser } = usePlaylist([playlists, setPlaylists])\r\n\r\n\r\n    async function handlerAddMusics(idPlaylist) {\r\n        setClickedPlaylistId(idPlaylist)\r\n        setOpen(true)\r\n    }\r\n\r\n    async function onSortEnd({ oldIndex, newIndex }, playlistId) {\r\n        const [playlistWhoChanged] = playlists.filter((playlist) => playlist._id == playlistId)\r\n        changeOrderMusic(playlistWhoChanged, oldIndex, newIndex)\r\n    }\r\n\r\n    const SortableItem = SortableElement(({ value }) => {\r\n        return <CardMusic>\r\n            <MenuIconChangeMusic low_opacity={videoFile.playing} />\r\n            <Text low_opacity={videoFile.value?._id != value.value?._id && videoFile.playing} as=\"center\" size=\"14px\" mb=\"0px\" ml=\"12px\" wrap=\"inherit\" tlines={true}>{value.value?.title}</Text>\r\n            <IconButton onClick={()=>handlerSetMusic(value.value)}>\r\n                <PlayArrowIcon style={{ color: \"#1db954\" }}></PlayArrowIcon>\r\n            </IconButton>\r\n        </CardMusic>\r\n    });\r\n\r\n    const SortableList = SortableContainer(({ items }) => {\r\n        return (\r\n            <ul>\r\n                {items.map((value, index) => (\r\n                    <SortableItem disabled={videoFile.playing} key={`item-${value.value?._id}`} index={index} value={value} />\r\n                ))}\r\n            </ul>\r\n        );\r\n    });\r\n\r\n    useEffect(() => {\r\n        playlistsUser(props.user._id)\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <PlaylistContainer>\r\n            {\r\n                playlists.length == 0 && <Lottie\r\n                    options={{\r\n                        loop: true,\r\n                        autoplay: true,\r\n                        animationData: loadingSvg,\r\n                        rendererSettings: {\r\n                            preserveAspectRatio: \"xMidYMid slice\"\r\n                        }\r\n                    }}\r\n                    height={40}\r\n                    width={40}\r\n                />\r\n            }\r\n            {\r\n                playlists.map((element, i) => {\r\n                    return (\r\n                        <GridItemPlaylist key={element?._id} item xs={3}>\r\n                            <CardPlaylist>\r\n                                <Text size=\"16px\" mb=\"0px\">{element?.title}</Text>\r\n                                <ContainerList>\r\n                                    <SortableList items={element?.music} onSortEnd={(e) => onSortEnd(e, element?._id)} pressDelay={200} />\r\n                                </ContainerList>\r\n                                <div>\r\n                                    <Button w=\"60%\" my=\"1rem\" onClick={() => handlerAddMusics(element?._id)}>Add Musicas</Button>\r\n                                </div>\r\n                            </CardPlaylist>\r\n                        </GridItemPlaylist>\r\n                    )\r\n                })\r\n            }\r\n            <openAddContext.Provider value={[open, setOpen]}>\r\n                <ModalAdd playlist={clickedPlaylistId} user={props.user} />\r\n            </openAddContext.Provider>\r\n        </PlaylistContainer>\r\n    );\r\n}\r\n\r\nexport default Playlist;"]},"metadata":{},"sourceType":"module"}