{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilh\\\\Desktop\\\\ai-emotions2.0\\\\client\\\\src\\\\components\\\\Home\\\\emotions.js\";\nimport { playlistsContext, SelectedPlaylistContext } from '../../context/playlistContext';\nimport { filePlayingContext } from '../../context/filePlaying';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { getLastMusicByPlaylist, modifyPlaylistMusics } from '../../services/PlaylistService';\nimport { Text, Button, Dflex, Input } from '../../stylesGlobaly/globalComponents';\nimport useMusic from '../../hooks/useMusic';\n\nconst Emotions = props => {\n  const [selectedPlaylist, setSelectedPlaylist] = useContext(SelectedPlaylistContext);\n  const [playlists, setPlaylists] = useContext(playlistsContext);\n  const [videoFile, setVideoFile] = useContext(filePlayingContext);\n  const {\n    handlerSetPlaylistRandom\n  } = useMusic([videoFile, setVideoFile], [playlists, setPlaylists], [selectedPlaylist, setSelectedPlaylist]);\n  useEffect(() => {\n    console.log(playlists);\n    setSelectedPlaylist(playlists);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    my: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Playlist Selecionada: \", selectedPlaylist.title), /*#__PURE__*/React.createElement(Button, {\n    my: \"20px\",\n    onClick: handlerSetPlaylistRandom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Mudar Playlist\"));\n};\n\nexport default Emotions;","map":{"version":3,"sources":["C:/Users/guilh/Desktop/ai-emotions2.0/client/src/components/Home/emotions.js"],"names":["playlistsContext","SelectedPlaylistContext","filePlayingContext","React","useState","useEffect","useContext","getLastMusicByPlaylist","modifyPlaylistMusics","Text","Button","Dflex","Input","useMusic","Emotions","props","selectedPlaylist","setSelectedPlaylist","playlists","setPlaylists","videoFile","setVideoFile","handlerSetPlaylistRandom","console","log","width","title"],"mappings":";AAAA,SAASA,gBAAT,EAA2BC,uBAA3B,QAA0D,+BAA1D;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,sBAAT,EAAiCC,oBAAjC,QAA6D,gCAA7D;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,KAA9B,QAA2C,sCAA3C;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAS;AACtB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CX,UAAU,CAACL,uBAAD,CAA1D;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4Bb,UAAU,CAACN,gBAAD,CAA5C;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4Bf,UAAU,CAACJ,kBAAD,CAA5C;AACA,QAAM;AAAEoB,IAAAA;AAAF,MAA+BT,QAAQ,CACzC,CAACO,SAAD,EAAYC,YAAZ,CADyC,EAEzC,CAACH,SAAD,EAAYC,YAAZ,CAFyC,EAGzC,CAACH,gBAAD,EAAmBC,mBAAnB,CAHyC,CAA7C;AAMAZ,EAAAA,SAAS,CAAC,MAAI;AACVkB,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACAD,IAAAA,mBAAmB,CAACC,SAAD,CAAnB;AACH,GAHQ,EAGP,EAHO,CAAT;AAKA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAuCT,gBAAgB,CAACU,KAAxD,CADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,OAAO,EAAEJ,wBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADJ;AAMH,CArBD;;AAuBA,eAAeR,QAAf","sourcesContent":["import { playlistsContext, SelectedPlaylistContext } from '../../context/playlistContext'\r\nimport { filePlayingContext } from '../../context/filePlaying'\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { getLastMusicByPlaylist, modifyPlaylistMusics } from '../../services/PlaylistService'\r\nimport { Text, Button, Dflex, Input } from '../../stylesGlobaly/globalComponents'\r\nimport useMusic from '../../hooks/useMusic'\r\n\r\nconst Emotions = (props)=>{\r\n    const [selectedPlaylist, setSelectedPlaylist] = useContext(SelectedPlaylistContext)\r\n    const [playlists, setPlaylists] = useContext(playlistsContext)\r\n    const [videoFile, setVideoFile] = useContext(filePlayingContext)\r\n    const { handlerSetPlaylistRandom } = useMusic(\r\n        [videoFile, setVideoFile],\r\n        [playlists, setPlaylists],\r\n        [selectedPlaylist, setSelectedPlaylist]\r\n    )\r\n\r\n    useEffect(()=>{\r\n        console.log(playlists)\r\n        setSelectedPlaylist(playlists)\r\n    },[])\r\n\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n            <Text my=\"20px\">Playlist Selecionada: {selectedPlaylist.title}</Text>\r\n            <Button my=\"20px\" onClick={handlerSetPlaylistRandom}>Mudar Playlist</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Emotions;"]},"metadata":{},"sourceType":"module"}